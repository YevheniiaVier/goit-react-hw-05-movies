{"version":3,"file":"static/js/64.dc19b9e3.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.js","components/Movies/Movies.styled.js","components/Movies/Movies.jsx","pages/HomePage/HomePage.jsx","pages/NotExistingPage/NotExistingPage.styled..js","services/movies-api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nimport { Box } from 'pages/NotExistingPage/NotExistingPage.styled.';\n\nexport const Loader = () => {\n  return (\n    <Box>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#38D2D2\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  //   flex-direction: column;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\n\nexport const MovieCard = styled.li`\nbackground-color: white;\noverflow: hidden;\nborder-radius: 5px 5px 5px 5px;\ntransition: box-shadow 250ms linear;\nwidth: 230px;\n&:hover,\n&:focus {\ncursor: pointer;\nbox-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12),\n0px 4px 4px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n}\n}\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieTitle = styled.p`\n  max-width: 336px;\n  margin: 0;\n  padding: 10px;\n  color: ${p => p.theme.colors.accent};\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.17;\n`;\n\nexport const Poster = styled.img.attrs(props => ({\n  src: props.src,\n  alt: props.alt,\n}))`\n  width: 100%;\n  height: auto;\n  border-radius: 5px 5px 5px 5px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  List,\n  MovieLink,\n  MovieCard,\n  Poster,\n  MovieTitle,\n} from './MoviesList.styled';\nimport defaultImg from '../../images/default.png';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(\n    (\n      { id, title, name, original_title, original_name, poster_path },\n      index\n    ) => (\n      <MovieCard key={id + index}>\n        <MovieLink state={{ from: location }} to={`/movies/${id}`}>\n          <Poster\n            src={\n              poster_path === null\n                ? defaultImg\n                : `https://image.tmdb.org/t/p/w1280/${poster_path}`\n            }\n            alt={title ?? name ?? original_title ?? original_name}\n            loading=\"lazy\"\n          />\n          <MovieTitle>\n            {title ?? name ?? original_title ?? original_name}\n          </MovieTitle>\n        </MovieLink>\n      </MovieCard>\n    )\n  );\n  return <List id=\"gallery\">{elements}</List>;\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.primary};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  padding: ${p => p.theme.space[0]}px;\n  padding-left: ${p => p.theme.space[7]}px;\n  margin: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: ${p => p.theme.colors.primary};\n  font-weight: ${p => p.theme.fontWeights.bolder};\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { getMovies } from 'services/movies-api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Message, Wrapper } from './Movies.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Movies = ({ onMoviesSearch }) => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const result = await getMovies();\n        setMovies(prevState => [...prevState, ...result]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n    console.log('fetch');\n  }, []);\n\n  return (\n    <Wrapper>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {loading && <Loader />}\n      {error && <Message>{error.message}</Message>}\n    </Wrapper>\n  );\n};\n","import { Box, Title } from './HomePage.styled';\nimport { Movies } from 'components/Movies/Movies';\n\nconst HomePage = () => {\n  console.log(Movies);\n  return (\n    <Box>\n      <Title>Trending today</Title>\n      <Movies />\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Box = styled.div``;\nexport const Title = styled.h2``;\nexport const StyledLink = styled(Link)``;\n","import axios from 'axios';\n\n// export const API_KEY = '62e7f60baa5f08ed1edf6bd3ed6b9146';\n// export const BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '62e7f60baa5f08ed1edf6bd3ed6b9146',\n    language: 'en-US',\n  },\n});\n\nexport const getMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/all/day?`, {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCard = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query, page) => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","List","styled","MovieCard","MovieLink","Link","MovieTitle","p","theme","colors","accent","Poster","props","src","alt","MoviesList","movies","location","useLocation","elements","map","index","id","title","name","original_title","original_name","poster_path","state","from","to","defaultImg","loading","defaultProps","Box","Title","primary","fontSizes","l","fontWeights","bold","space","Message","bolder","Wrapper","Movies","onMoviesSearch","useState","setMovies","setLoading","error","setError","useEffect","fetchMovies","getMovies","result","prevState","message","console","log","length","StyledLink","instance","axios","baseURL","params","api_key","language","page","get","data","results","getMovieCard","getMovieBySearch","query","getCast","cast","getReviews"],"sourceRoot":""}